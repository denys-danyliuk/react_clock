{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","currentDate","setState","console","log","toLocaleTimeString","prevProps","oldName","clockName","newName","props","clearInterval","dateToString","className","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","handleContextClick","handleClick","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"6MAWaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAMC,EAAc,IAAIL,KAExB,EAAKM,SAAS,CAAEP,KAAMM,IAEtBE,QAAQC,IAAIH,EAAYI,wBACvB,OAdP,gCAiBE,SAAmBC,GACjB,IAAMC,EAAUD,EAAUE,UACpBC,EAAUX,KAAKY,MAAMF,UAEvBD,IAAYE,GACdN,QAAQC,IAAR,uBAA4BG,EAA5B,eAA0CE,MAtBhD,kCA0BE,WACEV,OAAOY,cAAcb,KAAKD,WA3B9B,oBA8BE,WACE,IAAQW,EAAcV,KAAKY,MAAnBF,UAEFI,EADWd,KAAKJ,MAAdC,KACkBU,qBAE1B,OACE,sBAAKQ,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGL,IAGF,YAED,sBAAMK,UAAU,cAAhB,SACGD,WA5CX,GAA2BE,aCP3B,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAQX,IAAMK,EAAb,4MACE3B,MAAQ,CACN4B,UAAU,EACVd,UAAWO,KAHf,EAMElB,QAAU,EANZ,EAiBE0B,mBAAqB,WACnB,EAAKrB,SAAS,CAAEoB,UAAU,KAlB9B,EAqBEE,YAAc,WACZ,EAAKtB,SAAS,CAAEoB,UAAU,KAtB9B,uDAQE,WAAqB,IAAD,OAClBxB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKE,SAAS,CAAEM,UAAWO,QAC1B,MAEHU,SAASC,iBAAiB,cAAe5B,KAAKyB,oBAC9CE,SAASC,iBAAiB,QAAS5B,KAAK0B,eAd5C,oBAyBE,WACE,IAAQF,EAAaxB,KAAKJ,MAAlB4B,SAER,OACE,sBAAKT,UAAU,MAAf,UACE,6CACCS,GAAY,cAAC,EAAD,CAAOd,UAAWV,KAAKJ,MAAMc,mBA/BlD,GAAyBM,aCZzBa,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.68589c0e.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport { Component } from 'react';\n\ntype Props = {\n  clockName: string,\n};\n\ntype State = {\n  date: Date,\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const currentDate = new Date();\n\n      this.setState({ date: currentDate });\n\n      console.log(currentDate.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const oldName = prevProps.clockName;\n    const newName = this.props.clockName;\n\n    if (oldName !== newName) {\n      console.log(`Renamed from ${oldName} to ${newName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { date } = this.state;\n    const dateToString = date.toLocaleTimeString();\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {dateToString}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: getRandomName(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.handleContextClick);\n    document.addEventListener('click', this.handleClick);\n  }\n\n  handleContextClick = () => {\n    this.setState({ hasClock: false });\n  };\n\n  handleClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock clockName={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}